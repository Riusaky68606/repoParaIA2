{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { Global } from './global';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class LibroService {\n  constructor(_http) {\n    this._http = _http;\n    this.url = Global.url;\n  }\n  // ver todos los libros\n  //http://localhost:3600/libros\n  getLibros() {\n    //console.log(this.url+'libros');\n    let headers = new HttpHeaders().set('Content-Type', 'application/json');\n    return this._http.get(this.url + 'libros', {\n      headers: headers\n    });\n    ;\n  }\n  // guardar libro\n  //http://localhost:3600/guardar-libro\n  guardarLibro(libro) {\n    let params = JSON.stringify(libro);\n    let headers = new HttpHeaders().set('Content-Type', 'application/json');\n    return this._http.post(this.url + 'guardar-libro', params, {\n      headers: headers\n    });\n  }\n  // ver libro\n  //http://localhost:3600/libro/:id\n  getLibro(id) {\n    let headers = new HttpHeaders().set('Content-Type', 'application/json');\n    return this._http.get(this.url + 'libro/' + id, {\n      headers: headers\n    });\n  }\n  // editar libro\n  //http://localhost:3600/libro/:id\n  updateLibro(libro) {\n    let params = JSON.stringify(libro);\n    let headers = new HttpHeaders().set('Content-Type', 'application/json');\n    return this._http.put(this.url + 'libro/' + libro._id, params, {\n      headers: headers\n    });\n  }\n  //eliminar libro\n  //http://localhost:3600/libro/:id\n  deleteLibro(id) {\n    let headers = new HttpHeaders().set('Content-Type', 'application/json');\n    return this._http.delete(this.url + 'libro/' + id, {\n      headers: headers\n    });\n  }\n}\nLibroService.ɵfac = function LibroService_Factory(t) {\n  return new (t || LibroService)(i0.ɵɵinject(i1.HttpClient));\n};\nLibroService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: LibroService,\n  factory: LibroService.ɵfac\n});","map":{"version":3,"mappings":"AACA,SAAqBA,WAAW,QAAO,sBAAsB;AAG7D,SAASC,MAAM,QAAQ,UAAU;;;AAEjC,OAAM,MAAOC,YAAY;EAErBC,YACYC,KAAgB;IAAhB,UAAK,GAALA,KAAK;IAEb,IAAI,CAACC,GAAG,GAACJ,MAAM,CAACI,GAAG;EACvB;EACJ;EACA;EACAC,SAAS;IACL;IACA,IAAIC,OAAO,GAAC,IAAIP,WAAW,EAAE,CAACQ,GAAG,CAAC,cAAc,EAAC,kBAAkB,CAAC;IACpE,OAAO,IAAI,CAACJ,KAAK,CAACK,GAAG,CAAC,IAAI,CAACJ,GAAG,GAAC,QAAQ,EAAC;MAACE,OAAO,EAACA;IAAO,CAAC,CAAC;IAAC;EAC/D;EACA;EACA;EACAG,YAAY,CAACC,KAAW;IACpB,IAAIC,MAAM,GAACC,IAAI,CAACC,SAAS,CAACH,KAAK,CAAC;IAChC,IAAIJ,OAAO,GAAC,IAAIP,WAAW,EAAE,CAACQ,GAAG,CAAC,cAAc,EAAC,kBAAkB,CAAC;IACpE,OAAO,IAAI,CAACJ,KAAK,CAACW,IAAI,CAAC,IAAI,CAACV,GAAG,GAAC,eAAe,EAACO,MAAM,EAAC;MAACL,OAAO,EAACA;IAAO,CAAC,CAAC;EAC7E;EACA;EACA;EACAS,QAAQ,CAACC,EAAS;IACd,IAAIV,OAAO,GAAC,IAAIP,WAAW,EAAE,CAACQ,GAAG,CAAC,cAAc,EAAC,kBAAkB,CAAC;IACpE,OAAO,IAAI,CAACJ,KAAK,CAACK,GAAG,CAAC,IAAI,CAACJ,GAAG,GAAC,QAAQ,GAACY,EAAE,EAAC;MAACV,OAAO,EAACA;IAAO,CAAC,CAAC;EACjE;EACA;EACA;EACAW,WAAW,CAACP,KAAW;IACnB,IAAIC,MAAM,GAACC,IAAI,CAACC,SAAS,CAACH,KAAK,CAAC;IAChC,IAAIJ,OAAO,GAAC,IAAIP,WAAW,EAAE,CAACQ,GAAG,CAAC,cAAc,EAAC,kBAAkB,CAAC;IACpE,OAAO,IAAI,CAACJ,KAAK,CAACe,GAAG,CAAC,IAAI,CAACd,GAAG,GAAC,QAAQ,GAACM,KAAK,CAACS,GAAG,EAACR,MAAM,EAAC;MAACL,OAAO,EAACA;IAAO,CAAC,CAAC;EAC/E;EACA;EACA;EACAc,WAAW,CAACJ,EAAS;IACjB,IAAIV,OAAO,GAAC,IAAIP,WAAW,EAAE,CAACQ,GAAG,CAAC,cAAc,EAAC,kBAAkB,CAAC;IACpE,OAAO,IAAI,CAACJ,KAAK,CAACkB,MAAM,CAAC,IAAI,CAACjB,GAAG,GAAC,QAAQ,GAACY,EAAE,EAAC;MAACV,OAAO,EAACA;IAAO,CAAC,CAAC;EACpE;;AAvCaL,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;SAAZA,YAAY;EAAAqB,SAAZrB,YAAY;AAAA","names":["HttpHeaders","Global","LibroService","constructor","_http","url","getLibros","headers","set","get","guardarLibro","libro","params","JSON","stringify","post","getLibro","id","updateLibro","put","_id","deleteLibro","delete","factory"],"sourceRoot":"","sources":["D:\\Poli_sexto\\Ingenieria de Software\\Proyecto Ing.Software II\\nuevojerson\\ProyectoLibreriaWeb_MEAN\\libreria\\src\\app\\services\\libro.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders} from '@angular/common/http';\r\nimport { Libro } from '../models/libro';\r\nimport { Observable } from 'rxjs';\r\nimport { Global } from './global';\r\n@Injectable()\r\nexport class LibroService{\r\n    public url:string;\r\n    constructor(\r\n        private _http:HttpClient\r\n    ){\r\n        this.url=Global.url;\r\n    }\r\n// ver todos los libros\r\n//http://localhost:3600/libros\r\ngetLibros():Observable<any>{\r\n    //console.log(this.url+'libros');\r\n    let headers=new HttpHeaders().set('Content-Type','application/json');\r\n    return this._http.get(this.url+'libros',{headers:headers});;\r\n}\r\n// guardar libro\r\n//http://localhost:3600/guardar-libro\r\nguardarLibro(libro:Libro):Observable<any>{\r\n    let params=JSON.stringify(libro);\r\n    let headers=new HttpHeaders().set('Content-Type','application/json');\r\n    return this._http.post(this.url+'guardar-libro',params,{headers:headers});\r\n}\r\n// ver libro\r\n//http://localhost:3600/libro/:id\r\ngetLibro(id:string):Observable<any>{\r\n    let headers=new HttpHeaders().set('Content-Type','application/json');\r\n    return this._http.get(this.url+'libro/'+id,{headers:headers});\r\n}\r\n// editar libro\r\n//http://localhost:3600/libro/:id\r\nupdateLibro(libro:Libro):Observable<any>{\r\n    let params=JSON.stringify(libro);\r\n    let headers=new HttpHeaders().set('Content-Type','application/json');\r\n    return this._http.put(this.url+'libro/'+libro._id,params,{headers:headers});\r\n}\r\n//eliminar libro\r\n//http://localhost:3600/libro/:id\r\ndeleteLibro(id:string):Observable<any>{\r\n    let headers=new HttpHeaders().set('Content-Type','application/json');\r\n    return this._http.delete(this.url+'libro/'+id,{headers:headers});\r\n}\r\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}