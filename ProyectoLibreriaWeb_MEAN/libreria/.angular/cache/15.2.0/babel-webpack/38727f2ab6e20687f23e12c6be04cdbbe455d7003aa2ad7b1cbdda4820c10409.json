{"ast":null,"code":"import { UsuarioService } from 'src/app/services/usuario.service';\nimport { CuentaService } from 'src/app/services/cuenta.service';\nimport { Cuenta } from 'src/app/models/cuenta';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/usuario.service\";\nimport * as i2 from \"src/app/services/cuenta.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nfunction CrearCuentaComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 1)(1, \"h2\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"form\", 2, 3);\n    i0.ɵɵlistener(\"ngSubmit\", function CrearCuentaComponent_div_0_Template_form_ngSubmit_3_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const _r1 = i0.ɵɵreference(4);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.guardarCuenta(_r1));\n    });\n    i0.ɵɵelementStart(5, \"p\")(6, \"label\", 4);\n    i0.ɵɵtext(7, \"Tipo: \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"select\", 5, 6);\n    i0.ɵɵlistener(\"ngModelChange\", function CrearCuentaComponent_div_0_Template_select_ngModelChange_8_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.account.tipo = $event);\n    });\n    i0.ɵɵelementStart(10, \"option\", 7);\n    i0.ɵɵtext(11, \"Ahorros\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"option\", 8);\n    i0.ɵɵtext(13, \"Corriente\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(14, \"p\")(15, \"label\", 9);\n    i0.ɵɵtext(16, \"Cuenta: \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"input\", 10, 11);\n    i0.ɵɵlistener(\"ngModelChange\", function CrearCuentaComponent_div_0_Template_input_ngModelChange_17_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.account.cuenta = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelement(19, \"input\", 12);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const _r1 = i0.ɵɵreference(4);\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.titulo);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.account.tipo);\n    i0.ɵɵadvance(9);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.account.cuenta);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"disabled\", !_r1.form.valid);\n  }\n}\nexport class CrearCuentaComponent {\n  constructor(_usuarioService, _accountService, _router, _route) {\n    this._usuarioService = _usuarioService;\n    this._accountService = _accountService;\n    this._router = _router;\n    this._route = _route;\n    this.connected = false;\n    this.titulo = \"CREAR CUENTA\";\n    this.connected = false;\n    this.messages = null;\n    this.user = null;\n    this.id = null;\n    this.account = new Cuenta(this.id, '', '', 0, false);\n    this.accountGuardar = new Cuenta('', '', '', 0, false);\n    this.idGuardado = '';\n    this._usuarioService.loggedIn.subscribe(resp => {\n      if (resp == true) {\n        this.connected = true;\n      }\n    });\n    this._usuarioService.user.subscribe(resp => {\n      if (resp != '') {\n        this.user = resp;\n      }\n    });\n    this._usuarioService.id.subscribe(resp => {\n      if (resp != '') {\n        this.id = resp;\n        this.getCuentasUsuario(this.id);\n      }\n    });\n  }\n  ngOnInit() {}\n  guardarCuenta(form) {\n    this.account.user_id = this.id;\n    console.log(this.account);\n    this._accountService.guardarCuenta(this.account).subscribe(response => {\n      if (response.result) {\n        this.accountGuardar = response.result;\n        this.idGuardado = response.result._id;\n        this.messages = {\n          message: 'account registrada con éxito',\n          status: 'success'\n        };\n      } else {\n        this.messages = {\n          message: 'No se ha podido registrar la account',\n          status: 'failed'\n        };\n        ;\n      }\n    }, error => {\n      console.log(error);\n      this.messages = {\n        message: 'No se ha podido registrar la account',\n        status: 'failed'\n      };\n      ;\n    });\n  }\n  getCuentasUsuario(user_id) {\n    this._accountService.getCuentasUsuario(user_id).subscribe(response => {\n      if (response.result) {\n        console.log(response.result);\n      } else {\n        console.log(\"ERROR 1\");\n      }\n    }, error => {\n      console.log(error);\n      //this.messages={message:'No se ha podido registrar la account',status:'failed'};;\n    });\n  }\n}\n\nCrearCuentaComponent.ɵfac = function CrearCuentaComponent_Factory(t) {\n  return new (t || CrearCuentaComponent)(i0.ɵɵdirectiveInject(i1.UsuarioService), i0.ɵɵdirectiveInject(i2.CuentaService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i3.ActivatedRoute));\n};\nCrearCuentaComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CrearCuentaComponent,\n  selectors: [[\"app-crear-account\"]],\n  features: [i0.ɵɵProvidersFeature([UsuarioService, CuentaService])],\n  decls: 1,\n  vars: 1,\n  consts: [[\"class\", \"container\", 4, \"ngIf\"], [1, \"container\"], [3, \"ngSubmit\"], [\"accountForm\", \"ngForm\"], [\"for\", \"tipo\"], [\"name\", \"tipo\", 3, \"ngModel\", \"ngModelChange\"], [\"tipo\", \"ngModel\"], [\"value\", \"Ahorros\"], [\"value\", \"Corriente\"], [\"for\", \"account\"], [\"type\", \"text\", \"name\", \"cuenta\", 3, \"ngModel\", \"ngModelChange\"], [\"cuenta\", \"ngModel\"], [\"type\", \"submit\", \"value\", \"Guardar\", 3, \"disabled\"]],\n  template: function CrearCuentaComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, CrearCuentaComponent_div_0_Template, 20, 4, \"div\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.connected == true);\n    }\n  },\n  dependencies: [i4.NgIf, i5.ɵNgNoValidate, i5.NgSelectOption, i5.ɵNgSelectMultipleOption, i5.DefaultValueAccessor, i5.SelectControlValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.NgModel, i5.NgForm],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["UsuarioService","CuentaService","Cuenta","i0","CrearCuentaComponent","constructor","_usuarioService","_accountService","_router","_route","titulo","connected","messages","user","id","account","accountGuardar","idGuardado","loggedIn","subscribe","resp","getCuentasUsuario","ngOnInit","guardarCuenta","form","user_id","console","log","response","result","_id","message","status","error","selectors","features","decls","vars","consts","template"],"sourceRoot":"","sources":["D:\\Poli_sexto\\Ingenieria de Software\\Proyecto Ing.Software II\\nuevojerson\\ProyectoLibreriaWeb_MEAN\\libreria\\src\\app\\components\\crear-cuenta\\crear-cuenta.component.ts","D:\\Poli_sexto\\Ingenieria de Software\\Proyecto Ing.Software II\\nuevojerson\\ProyectoLibreriaWeb_MEAN\\libreria\\src\\app\\components\\crear-cuenta\\crear-cuenta.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { UsuarioService } from 'src/app/services/usuario.service';\r\nimport { CuentaService } from 'src/app/services/cuenta.service';\r\nimport { Cuenta } from 'src/app/models/cuenta';\r\nimport { Global } from 'src/app/services/global';\r\nimport { NgForm } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-crear-account',\r\n  templateUrl: './crear-cuenta.component.html',\r\n  styleUrls: ['./crear-cuenta.component.css'],\r\n  providers: [UsuarioService,CuentaService]\r\n})\r\nexport class CrearCuentaComponent {\r\n  public titulo:string;\r\n  public connected=false;\r\n  public messages:any;\r\n  public user:any;\r\n  public id:any;\r\n\r\n  public account:Cuenta;\r\n  public accountGuardar:Cuenta;\r\n  public idGuardado:string;\r\n\r\n  constructor(\r\n    private _usuarioService:UsuarioService,\r\n    private _accountService:CuentaService,\r\n    private _router:Router,\r\n    private _route:ActivatedRoute\r\n  ){\r\n    this.titulo=\"CREAR CUENTA\";\r\n    this.connected=false;\r\n    this.messages=null;\r\n    this.user=null;\r\n    this.id=null;\r\n    \r\n    this.account=new Cuenta(this.id,'','',0,false);\r\n    this.accountGuardar=new Cuenta('','','',0,false);\r\n    this.idGuardado='';\r\n\r\n    this._usuarioService.loggedIn.subscribe(resp =>{\r\n      if(resp==true){\r\n        this.connected=true;\r\n      }\r\n    });\r\n    this._usuarioService.user.subscribe(resp =>{\r\n      if(resp!=''){\r\n        this.user=resp;\r\n      }\r\n    });\r\n    this._usuarioService.id.subscribe(resp =>{\r\n      if(resp!=''){\r\n        this.id=resp;\r\n        this.getCuentasUsuario(this.id);\r\n      }\r\n    });\r\n    \r\n  }\r\n  ngOnInit(): void {\r\n  }\r\n  guardarCuenta(form:NgForm){\r\n    this.account.user_id=this.id;\r\n    console.log(this.account);\r\n    this._accountService.guardarCuenta(this.account).subscribe(\r\n      response=>{\r\n        if(response.result){\r\n          this.accountGuardar=response.result;\r\n          this.idGuardado=response.result._id;\r\n          this.messages={message:'account registrada con éxito',status:'success'};\r\n        }else{\r\n          this.messages={message:'No se ha podido registrar la account',status:'failed'};;\r\n        } \r\n      },\r\n      error=>{\r\n        console.log(<any>error);\r\n        this.messages={message:'No se ha podido registrar la account',status:'failed'};;\r\n      }\r\n    );\r\n  }\r\n\r\n  getCuentasUsuario(user_id:string){\r\n    this._accountService.getCuentasUsuario(user_id).subscribe(\r\n      response=>{\r\n        if(response.result){\r\n          console.log(response.result);\r\n        }else{\r\n          console.log(\"ERROR 1\")\r\n        } \r\n      },\r\n      error=>{\r\n        console.log(<any>error);\r\n        //this.messages={message:'No se ha podido registrar la account',status:'failed'};;\r\n      }\r\n    );\r\n  }\r\n  \r\n}\r\n","<div *ngIf=\"connected==true\" class=\"container\">\r\n    <h2>{{titulo}}</h2>\r\n    <form #accountForm=\"ngForm\" (ngSubmit)=\"guardarCuenta(accountForm)\">\r\n        <p>\r\n            <label for=\"tipo\">Tipo: </label>\r\n            <select name=\"tipo\" #tipo=\"ngModel\" [(ngModel)]=\"account.tipo\">\r\n                <option value=\"Ahorros\">Ahorros</option>\r\n                <option value=\"Corriente\">Corriente</option>\r\n            </select>\r\n        </p>\r\n        <p>\r\n            <label for=\"account\">Cuenta: </label>\r\n            <input type=\"text\" name=\"cuenta\" #cuenta=\"ngModel\" [(ngModel)]=\"account.cuenta\">\r\n        </p>\r\n        <input type=\"submit\" value=\"Guardar\" [disabled]=\"!accountForm.form.valid\">\r\n    </form>\r\n</div>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}