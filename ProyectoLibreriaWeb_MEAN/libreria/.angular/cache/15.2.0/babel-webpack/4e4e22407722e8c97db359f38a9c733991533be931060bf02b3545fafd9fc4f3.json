{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { Global } from './global';\nimport { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UsuarioService {\n  constructor(_http) {\n    this._http = _http;\n    this.url = Global.url;\n    this.loggedIn = new Subject();\n    this.user = new Subject();\n    this.id = new Subject();\n    this.getLogin();\n  }\n  // guardar usuario\n  //http://localhost:3600/create-user\n  guardarUsuario(usuario) {\n    let params = JSON.stringify(usuario);\n    let headers = new HttpHeaders().set('Content-Type', 'application/json');\n    return this._http.post(this.url + 'create-user', params, {\n      headers: headers\n    });\n  }\n  // login\n  //http://localhost:3600/login\n  login(user, password) {\n    let params = JSON.stringify({\n      user,\n      password\n    });\n    //console.log(params);\n    let headers = new HttpHeaders().set('Content-Type', 'application/json');\n    return this._http.post(this.url + 'login', params, {\n      headers: headers,\n      withCredentials: true\n    });\n  }\n  // logout\n  //http://localhost:3600/logout\n  logout() {\n    let headers = new HttpHeaders().set('Content-Type', 'application/json');\n    return this._http.get(this.url + 'logout', {\n      headers: headers,\n      withCredentials: true\n    });\n  }\n  getLogin() {\n    let headers = new HttpHeaders().set('Content-Type', 'application/json');\n    this._http.get(Global.url + 'login', {\n      headers: headers,\n      withCredentials: true\n    }).subscribe(resp => {\n      this.loggedIn.next(resp.loggedIn);\n      this.user.next(resp.user);\n      this.id.next(resp.id);\n    }, errorResp => {\n      //this.toastr.error('Oops, something went wrong getting the logged in status')\n      //console.log('Oops, something went wrong getting the logged in status');\n    });\n  }\n}\nUsuarioService.ɵfac = function UsuarioService_Factory(t) {\n  return new (t || UsuarioService)(i0.ɵɵinject(i1.HttpClient));\n};\nUsuarioService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UsuarioService,\n  factory: UsuarioService.ɵfac\n});","map":{"version":3,"mappings":"AACA,SAAqBA,WAAW,QAAO,sBAAsB;AAG7D,SAASC,MAAM,QAAQ,UAAU;AACjC,SAASC,OAAO,QAAQ,MAAM;;;AAG9B,OAAM,MAAOC,cAAc;EAKvBC,YACYC,KAAgB;IAAhB,UAAK,GAALA,KAAK;IAGb,IAAI,CAACC,GAAG,GAACL,MAAM,CAACK,GAAG;IACnB,IAAI,CAACC,QAAQ,GAAC,IAAIL,OAAO,EAAE;IAC3B,IAAI,CAACM,IAAI,GAAC,IAAIN,OAAO,EAAE;IACvB,IAAI,CAACO,EAAE,GAAC,IAAIP,OAAO,EAAE;IACrB,IAAI,CAACQ,QAAQ,EAAE;EACnB;EAEJ;EACA;EACAC,cAAc,CAACC,OAAe;IAC1B,IAAIC,MAAM,GAACC,IAAI,CAACC,SAAS,CAACH,OAAO,CAAC;IAClC,IAAII,OAAO,GAAC,IAAIhB,WAAW,EAAE,CAACiB,GAAG,CAAC,cAAc,EAAC,kBAAkB,CAAC;IACpE,OAAO,IAAI,CAACZ,KAAK,CAACa,IAAI,CAAC,IAAI,CAACZ,GAAG,GAAC,aAAa,EAACO,MAAM,EAAC;MAACG,OAAO,EAACA;IAAO,CAAC,CAAC;EAC3E;EACA;EACA;EACAG,KAAK,CAACX,IAAW,EAACY,QAAe;IAC7B,IAAIP,MAAM,GAACC,IAAI,CAACC,SAAS,CAAC;MAACP,IAAI;MAACY;IAAQ,CAAC,CAAC;IAC1C;IACA,IAAIJ,OAAO,GAAC,IAAIhB,WAAW,EAAE,CAACiB,GAAG,CAAC,cAAc,EAAC,kBAAkB,CAAC;IACpE,OAAO,IAAI,CAACZ,KAAK,CAACa,IAAI,CAAC,IAAI,CAACZ,GAAG,GAAC,OAAO,EAACO,MAAM,EAAC;MAACG,OAAO,EAACA,OAAO;MAAEK,eAAe,EAAC;IAAI,CAAC,CAAC;EAC3F;EACA;EACA;EACAC,MAAM;IACF,IAAIN,OAAO,GAAC,IAAIhB,WAAW,EAAE,CAACiB,GAAG,CAAC,cAAc,EAAC,kBAAkB,CAAC;IACpE,OAAO,IAAI,CAACZ,KAAK,CAACkB,GAAG,CAAC,IAAI,CAACjB,GAAG,GAAC,QAAQ,EAAC;MAACU,OAAO,EAACA,OAAO;MAACK,eAAe,EAAC;IAAI,CAAC,CAAC;EACnF;EAEAX,QAAQ;IACJ,IAAIM,OAAO,GAAC,IAAIhB,WAAW,EAAE,CAACiB,GAAG,CAAC,cAAc,EAAC,kBAAkB,CAAC;IACpE,IAAI,CAACZ,KAAK,CAACkB,GAAG,CAACtB,MAAM,CAACK,GAAG,GAAG,OAAO,EAAE;MAACU,OAAO,EAACA,OAAO;MAACK,eAAe,EAAC;IAAI,CAAC,CAAC,CAACG,SAAS,CAAEC,IAAS,IAAI;MACjG,IAAI,CAAClB,QAAQ,CAACmB,IAAI,CAACD,IAAI,CAAClB,QAAQ,CAAC;MACjC,IAAI,CAACC,IAAI,CAACkB,IAAI,CAACD,IAAI,CAACjB,IAAI,CAAC;MACzB,IAAI,CAACC,EAAE,CAACiB,IAAI,CAACD,IAAI,CAAChB,EAAE,CAAC;IACvB,CAAC,EAAGkB,SAAS,IAAI;MACf;MACA;IAAA,CACD,CAAC;EACN;;AAhDWxB,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;SAAdA,cAAc;EAAAyB,SAAdzB,cAAc;AAAA","names":["HttpHeaders","Global","Subject","UsuarioService","constructor","_http","url","loggedIn","user","id","getLogin","guardarUsuario","usuario","params","JSON","stringify","headers","set","post","login","password","withCredentials","logout","get","subscribe","resp","next","errorResp","factory"],"sourceRoot":"","sources":["D:\\Poli_sexto\\Ingenieria de Software\\Proyecto Ing.Software II\\nuevojerson\\ProyectoLibreriaWeb_MEAN\\libreria\\src\\app\\services\\usuario.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders} from '@angular/common/http';\r\nimport { Usuario } from '../models/usuario';\r\nimport { Observable } from 'rxjs';\r\nimport { Global } from './global';\r\nimport { Subject } from 'rxjs';\r\nimport { ToastrService } from 'ngx-toastr';\r\n@Injectable()\r\nexport class UsuarioService{\r\n    public url:string;\r\n    public loggedIn:Subject<Boolean>;\r\n    public user:Subject<string>;\r\n    public id:Subject<any>;\r\n    constructor(\r\n        private _http:HttpClient,\r\n        //private toastr: ToastrService\r\n    ){\r\n        this.url=Global.url;\r\n        this.loggedIn=new Subject();\r\n        this.user=new Subject();\r\n        this.id=new Subject();\r\n        this.getLogin();\r\n    }\r\n\r\n// guardar usuario\r\n//http://localhost:3600/create-user\r\nguardarUsuario(usuario:Usuario):Observable<any>{\r\n    let params=JSON.stringify(usuario);\r\n    let headers=new HttpHeaders().set('Content-Type','application/json');\r\n    return this._http.post(this.url+'create-user',params,{headers:headers});\r\n}\r\n// login\r\n//http://localhost:3600/login\r\nlogin(user:string,password:string):Observable<any>{\r\n    let params=JSON.stringify({user,password});\r\n    //console.log(params);\r\n    let headers=new HttpHeaders().set('Content-Type','application/json');\r\n    return this._http.post(this.url+'login',params,{headers:headers, withCredentials:true});\r\n}\r\n// logout\r\n//http://localhost:3600/logout\r\nlogout():Observable<any>{\r\n    let headers=new HttpHeaders().set('Content-Type','application/json');\r\n    return this._http.get(this.url+'logout',{headers:headers,withCredentials:true});\r\n}\r\n\r\ngetLogin(){\r\n    let headers=new HttpHeaders().set('Content-Type','application/json');\r\n    this._http.get(Global.url + 'login', {headers:headers,withCredentials:true}).subscribe((resp: any) => {\r\n        this.loggedIn.next(resp.loggedIn);\r\n        this.user.next(resp.user);\r\n        this.id.next(resp.id);\r\n      }, (errorResp) => {\r\n        //this.toastr.error('Oops, something went wrong getting the logged in status')\r\n        //console.log('Oops, something went wrong getting the logged in status');\r\n      })   \r\n  }\r\n\r\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}