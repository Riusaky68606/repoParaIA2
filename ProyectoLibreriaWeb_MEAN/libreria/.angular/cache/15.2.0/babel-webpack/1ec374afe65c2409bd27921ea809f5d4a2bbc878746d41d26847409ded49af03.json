{"ast":null,"code":"import { UsuarioService } from 'src/app/services/usuario.service';\nimport { TransaccionService } from 'src/app/services/transaccion.service';\nimport { Transaccion } from 'src/app/models/transaccion';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/usuario.service\";\nimport * as i2 from \"src/app/services/transaccion.service\";\nimport * as i3 from \"src/app/services/cuenta.service\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/forms\";\nfunction TransaccionComponent_div_0_option_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 16);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const cuenta_r6 = ctx.$implicit;\n    i0.ɵɵpropertyInterpolate(\"value\", cuenta_r6.cuenta);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(cuenta_r6.cuenta);\n  }\n}\nfunction TransaccionComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 1)(1, \"form\", 2, 3);\n    i0.ɵɵlistener(\"ngSubmit\", function TransaccionComponent_div_0_Template_form_ngSubmit_1_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const _r1 = i0.ɵɵreference(2);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.doTransaccion(_r1));\n    });\n    i0.ɵɵelementStart(3, \"p\")(4, \"label\", 4);\n    i0.ɵɵtext(5, \"Enviar desde: \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"select\", 5, 6);\n    i0.ɵɵlistener(\"ngModelChange\", function TransaccionComponent_div_0_Template_select_ngModelChange_6_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.transaccion.cuenta_emisor = $event);\n    });\n    i0.ɵɵtemplate(8, TransaccionComponent_div_0_option_8_Template, 2, 2, \"option\", 7);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(9, \"p\")(10, \"label\", 8);\n    i0.ɵɵtext(11, \"Enviar hacia: \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"input\", 9, 10);\n    i0.ɵɵlistener(\"ngModelChange\", function TransaccionComponent_div_0_Template_input_ngModelChange_12_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.transaccion.monto = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(14, \"p\")(15, \"label\", 11);\n    i0.ɵɵtext(16, \"Enviar hacia: \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"input\", 12, 13);\n    i0.ɵɵlistener(\"ngModelChange\", function TransaccionComponent_div_0_Template_input_ngModelChange_17_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.transaccion.cuenta_receptor = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"a\", 14);\n    i0.ɵɵlistener(\"click\", function TransaccionComponent_div_0_Template_a_click_19_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r12 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r12.validarCuenta());\n    });\n    i0.ɵɵtext(20, \"VALIDAR\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelement(21, \"input\", 15);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.transaccion.cuenta_emisor);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.cuentas);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.transaccion.monto);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.transaccion.cuenta_receptor);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"disabled\", !ctx_r0.cuentaValida == true);\n  }\n}\nexport class TransaccionComponent {\n  constructor(_usuarioService, _transaccionService, _accountService, _router, _route) {\n    this._usuarioService = _usuarioService;\n    this._transaccionService = _transaccionService;\n    this._accountService = _accountService;\n    this._router = _router;\n    this._route = _route;\n    this.connected = false;\n    this.titulo = \"Transferir\";\n    this.connected = false;\n    this.messages = null;\n    this.user = null;\n    this.id = null;\n    this.cuentas = [];\n    this.transaccion = new Transaccion('', '', 0, new Date(), 'Transferencia');\n    this.transaccionGuardar = new Transaccion('', '', 0, new Date(), 'Transferencia');\n    this.idGuardado = '';\n    this.cuentaValida = false;\n    this._usuarioService.loggedIn.subscribe(resp => {\n      if (resp == true) {\n        this.connected = true;\n      }\n    });\n    this._usuarioService.user.subscribe(resp => {\n      if (resp != '') {\n        this.user = resp;\n      }\n    });\n    this._usuarioService.id.subscribe(resp => {\n      if (resp != '') {\n        this.id = resp;\n        this.getCuentasUsuario(this.id);\n      }\n    });\n  }\n  ngOnInit() {}\n  doTransaccion(form) {\n    this._transaccionService.doTransaccion(this.transaccion).subscribe(response => {\n      console.log(response);\n    }, error => {\n      console.log(error);\n    });\n  }\n  getCuentasUsuario(user_id) {\n    this._accountService.getCuentasUsuario(user_id).subscribe(response => {\n      if (response.result) {\n        this.cuentas = response.result;\n      } else {\n        console.log(\"Error al recuperar los datos de sus cuentas\");\n      }\n    }, error => {\n      console.log(error);\n      //this.messages={message:'No se ha podido registrar la account',status:'failed'};;\n    });\n  }\n\n  validarCuenta() {\n    var cuen = this.transaccion.cuenta_receptor.toString();\n    this._accountService.validarCuenta(cuen).subscribe(response => {\n      if (response.result) {\n        //this.cuentas=response.result;\n        //console.log(response.result);\n        this.cuentaValida = true;\n      } else {\n        console.log(\"Error al recuperar los datos de sus cuentas\");\n        this.cuentaValida = false;\n      }\n    }, error => {\n      console.log(error);\n      this.cuentaValida = false;\n      //this.messages={message:'No se ha podido registrar la account',status:'failed'};;\n    });\n  }\n}\n\nTransaccionComponent.ɵfac = function TransaccionComponent_Factory(t) {\n  return new (t || TransaccionComponent)(i0.ɵɵdirectiveInject(i1.UsuarioService), i0.ɵɵdirectiveInject(i2.TransaccionService), i0.ɵɵdirectiveInject(i3.CuentaService), i0.ɵɵdirectiveInject(i4.Router), i0.ɵɵdirectiveInject(i4.ActivatedRoute));\n};\nTransaccionComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: TransaccionComponent,\n  selectors: [[\"app-transaccion\"]],\n  features: [i0.ɵɵProvidersFeature([UsuarioService, TransaccionService])],\n  decls: 1,\n  vars: 1,\n  consts: [[\"class\", \"container\", 4, \"ngIf\"], [1, \"container\"], [3, \"ngSubmit\"], [\"transaccionForm\", \"ngForm\"], [\"for\", \"cuenta_emisor\"], [\"name\", \"cuenta_emisor\", 3, \"ngModel\", \"ngModelChange\"], [\"cuenta_emisor\", \"ngModel\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"for\", \"monto\"], [\"type\", \"text\", \"name\", \"monto\", 3, \"ngModel\", \"ngModelChange\"], [\"monto\", \"ngModel\"], [\"for\", \"cuenta_receptor\"], [\"type\", \"text\", \"name\", \"cuenta_receptor\", 3, \"ngModel\", \"ngModelChange\"], [\"cuenta_receptor\", \"ngModel\"], [3, \"click\"], [\"type\", \"submit\", \"value\", \"Transferir\", 3, \"disabled\"], [3, \"value\"]],\n  template: function TransaccionComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, TransaccionComponent_div_0_Template, 22, 5, \"div\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.connected == true);\n    }\n  },\n  dependencies: [i5.NgForOf, i5.NgIf, i6.ɵNgNoValidate, i6.NgSelectOption, i6.ɵNgSelectMultipleOption, i6.DefaultValueAccessor, i6.SelectControlValueAccessor, i6.NgControlStatus, i6.NgControlStatusGroup, i6.NgModel, i6.NgForm],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["UsuarioService","TransaccionService","Transaccion","i0","TransaccionComponent","constructor","_usuarioService","_transaccionService","_accountService","_router","_route","titulo","connected","messages","user","id","cuentas","transaccion","Date","transaccionGuardar","idGuardado","cuentaValida","loggedIn","subscribe","resp","getCuentasUsuario","ngOnInit","doTransaccion","form","response","console","log","error","user_id","result","validarCuenta","cuen","cuenta_receptor","toString","selectors","features","decls","vars","consts","template"],"sourceRoot":"","sources":["D:\\Poli_sexto\\Ingenieria de Software\\Proyecto Ing.Software II\\nuevojerson\\ProyectoLibreriaWeb_MEAN\\libreria\\src\\app\\components\\transaccion\\transaccion.component.ts","D:\\Poli_sexto\\Ingenieria de Software\\Proyecto Ing.Software II\\nuevojerson\\ProyectoLibreriaWeb_MEAN\\libreria\\src\\app\\components\\transaccion\\transaccion.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { UsuarioService } from 'src/app/services/usuario.service';\r\nimport { CuentaService } from 'src/app/services/cuenta.service';\r\nimport { TransaccionService } from 'src/app/services/transaccion.service';\r\nimport { Cuenta } from 'src/app/models/cuenta';\r\nimport { Transaccion } from 'src/app/models/transaccion';\r\nimport { Global } from 'src/app/services/global';\r\nimport { NgForm } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-transaccion',\r\n  templateUrl: './transaccion.component.html',\r\n  styleUrls: ['./transaccion.component.css'],\r\n  providers: [UsuarioService,TransaccionService]\r\n})\r\nexport class TransaccionComponent {\r\n  public titulo:string;\r\n  public connected=false;\r\n  public messages:any;\r\n  public user:any;\r\n  public id:any;\r\n\r\n  public transaccion:Transaccion;\r\n  public transaccionGuardar:Transaccion;\r\n  public idGuardado:String;\r\n\r\n  public cuentas:Cuenta[];\r\n  public cuentaValida:boolean;\r\n\r\n  constructor(\r\n    private _usuarioService:UsuarioService,\r\n    private _transaccionService:TransaccionService,\r\n    private _accountService:CuentaService,\r\n    private _router:Router,\r\n    private _route:ActivatedRoute\r\n  ){\r\n    this.titulo=\"Transferir\";\r\n    this.connected=false;\r\n    this.messages=null;\r\n    this.user=null;\r\n    this.id=null;\r\n    this.cuentas=[];\r\n\r\n    this.transaccion=new Transaccion('','',0,new Date(),'Transferencia');\r\n    this.transaccionGuardar=new Transaccion('','',0,new Date(),'Transferencia');\r\n    this.idGuardado='';\r\n    this.cuentaValida=false;\r\n\r\n    this._usuarioService.loggedIn.subscribe(resp =>{\r\n      if(resp==true){\r\n        this.connected=true;\r\n      }\r\n    });\r\n    this._usuarioService.user.subscribe(resp =>{\r\n      if(resp!=''){\r\n        this.user=resp;\r\n      }\r\n    });\r\n    this._usuarioService.id.subscribe(resp =>{\r\n      if(resp!=''){\r\n        this.id=resp;\r\n        this.getCuentasUsuario(this.id);\r\n      }\r\n    });\r\n    \r\n  }\r\n  ngOnInit(): void {\r\n    \r\n  }\r\n  doTransaccion(form:NgForm){\r\n    this._transaccionService.doTransaccion(this.transaccion).subscribe(\r\n      response=>{\r\n        console.log(response);\r\n      },\r\n      error=>{\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n  getCuentasUsuario(user_id:string){\r\n    this._accountService.getCuentasUsuario(user_id).subscribe(\r\n      response=>{\r\n        if(response.result){\r\n          this.cuentas=response.result;\r\n        }else{\r\n          console.log(\"Error al recuperar los datos de sus cuentas\")\r\n        } \r\n      },\r\n      error=>{\r\n        console.log(<any>error);\r\n        //this.messages={message:'No se ha podido registrar la account',status:'failed'};;\r\n      }\r\n    );\r\n  }\r\n  validarCuenta(){\r\n    var cuen=this.transaccion.cuenta_receptor.toString();\r\n    this._accountService.validarCuenta(cuen).subscribe(\r\n      response=>{\r\n        if(response.result){\r\n          //this.cuentas=response.result;\r\n          //console.log(response.result);\r\n          this.cuentaValida=true;\r\n        }else{\r\n          console.log(\"Error al recuperar los datos de sus cuentas\")\r\n          this.cuentaValida=false;\r\n        } \r\n      },\r\n      error=>{\r\n        console.log(<any>error);\r\n        this.cuentaValida=false;\r\n        //this.messages={message:'No se ha podido registrar la account',status:'failed'};;\r\n      }\r\n    );\r\n  }\r\n}\r\n\r\n","<div *ngIf=\"connected==true\" class=\"container\">\r\n    <form #transaccionForm=\"ngForm\" (ngSubmit)=\"doTransaccion(transaccionForm)\">\r\n        <p>\r\n            <label for=\"cuenta_emisor\">Enviar desde: </label>\r\n            <select name=\"cuenta_emisor\" #cuenta_emisor=\"ngModel\" [(ngModel)]=\"transaccion.cuenta_emisor\">\r\n                <option *ngFor=\"let cuenta of cuentas\" value=\"{{cuenta.cuenta}}\">{{cuenta.cuenta}}</option>\r\n            </select>\r\n        </p>\r\n        <p>\r\n            <label for=\"monto\">Enviar hacia: </label>\r\n            <input type=\"text\" name=\"monto\" #monto=\"ngModel\" [(ngModel)]=\"transaccion.monto\">\r\n        </p>\r\n        <p>\r\n            <label for=\"cuenta_receptor\">Enviar hacia: </label>\r\n            <input type=\"text\" name=\"cuenta_receptor\" #cuenta_receptor=\"ngModel\" [(ngModel)]=\"transaccion.cuenta_receptor\">\r\n            <a (click)=\"validarCuenta()\">VALIDAR</a>\r\n        </p>\r\n        <input type=\"submit\" value=\"Transferir\" [disabled]=\"!cuentaValida==true\">\r\n    </form>\r\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}